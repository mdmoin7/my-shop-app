{"version":3,"file":"static/js/798.38933120.chunk.js","mappings":"0JAGA,QAHA,SAAcA,GACZ,OAAOC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,OAAMC,SAAEH,EAAMG,UACtC,E,6BCyCA,QApCA,SAAiBH,GACf,MAAM,SAAEI,IAAaC,EAAAA,EAAAA,KACfC,GAAOC,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,WACpCC,EAAOV,EAAMU,KAYnB,OACET,EAAAA,EAAAA,KAACU,EAAI,CAAAR,UACHS,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CAAEC,MAAOV,GAAWD,SAAA,EAC9BF,EAAAA,EAAAA,KAACc,EAAAA,GAAI,CAACC,GAAI,WAAWN,EAAKO,YAAYd,UACpCF,EAAAA,EAAAA,KAAA,OAAKiB,IAAKR,EAAKS,kBAEjBlB,EAAAA,EAAAA,KAAA,MAAAE,SAAKO,EAAKU,eACVR,EAAAA,EAAAA,MAAA,MAAAT,SAAA,CACGG,EACAI,EAAKW,gBAlBRX,EAAKY,aAAe,GAEpBrB,EAAAA,EAAAA,KAAA,UAAQsB,QAASA,IAAMvB,EAAMwB,SAASd,EAAKO,WAAWd,SAAC,iBAKpDF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,iBAcLO,EAAKY,aAAe,GACnBrB,EAAAA,EAAAA,KAAA,UAAQsB,QAASA,IAAMvB,EAAMwB,SAASd,EAAKO,WAAWd,SAAC,gBAGrD,SAIZ,ECxCA,MAAMsB,E,OAAgBC,EAAMC,OAAO,CACjCC,QAAS,0BAGXH,EAAcI,aAAaC,QAAQC,KAAKC,IACtC,IAAItB,EAAOuB,aAAaC,QAAQ,mBAKhC,OAJIxB,IACFA,EAAOyB,KAAKC,MAAM1B,GAClBsB,EAAOK,QAAuB,cAAI,UAAUF,KAAKC,MAAM1B,EAAK4B,SAEvDN,CAAM,IAGf,MASA,EADmB,CAAEO,IARRC,GACJf,EAAcc,IAAIC,GAODC,KAJbA,CAACD,EAAK9B,IACVe,EAAcgB,KAAKD,EAAK9B,ICCjC,QAlBA,WACE,IAAKgC,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,IACjC,MAAMC,EAAUC,UACd,IACE,MAAMC,QCFHC,EAAWT,IAFN,aDMRI,EAASI,EAAIrC,KACf,CAAE,MAAOuC,GACPC,QAAQC,IAAI,QAASF,EACvB,GAOF,OAJAG,EAAAA,EAAAA,YAAU,KACRP,GAAS,GACR,IAEIH,CACT,E,sBEeA,QA5BA,WAEE,MAAMA,EAAQW,IACRC,GAAWC,EAAAA,EAAAA,OACVC,EAAaC,IAAkBC,EAAAA,EAAAA,MAChCC,GAAWC,EAAAA,EAAAA,MAMjB,OALAR,EAAAA,EAAAA,YAAU,KAERF,QAAQC,IAAI,OAAQK,EAAYjB,IAAI,QAAQ,GAC3C,CAACiB,KAGF5C,EAAAA,EAAAA,MAAA,OAAAT,SAAA,CACGuC,EAAMmB,KAAKC,IACV7D,EAAAA,EAAAA,KAAC8D,EAAO,CAENrD,KAAMoD,EACNtC,SAAWwC,IACTL,GAASM,EAAAA,EAAAA,IAAQH,IACjBR,EAAS,QAAQ,GAJdQ,EAAK7C,cASdhB,EAAAA,EAAAA,KAAA,UAAQsB,QAASA,IAAMkC,EAAe,CAAES,KAAM,IAAK/D,SAAC,aAG1D,C","sources":["components/Card.js","components/Product.js","services/ApiService.js","hooks/useProducts.js","services/ProductService.js","containers/ProductList.js"],"sourcesContent":["function Card(props) {\n  return <div className=\"card\">{props.children}</div>;\n}\nexport default Card;\n","import { useContext } from \"react\";\nimport { ThemeContext } from \"../context\";\nimport Card from \"./Card\";\nimport useTheme from \"../hooks/useTheme\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\n\nfunction Product(props) {\n  const { txtColor } = useTheme();\n  const code = useSelector((store) => store.currency);\n  const data = props.data;\n\n  const renderStock = () => {\n    if (data.productStock > 0) {\n      return (\n        <button onClick={() => props.btnClick(data.productId)}>\n          Add to Cart\n        </button>\n      );\n    }\n    return <p>Out of Stock</p>;\n  };\n  return (\n    <Card>\n      <div style={{ color: txtColor }}>\n        <Link to={`/detail/${data.productId}`}>\n          <img src={data.productImage} />\n        </Link>\n        <h5>{data.productName}</h5>\n        <h6>\n          {code}\n          {data.productPrice}\n        </h6>\n        {renderStock()}\n        {data.productStock > 0 ? (\n          <button onClick={() => props.btnClick(data.productId)}>\n            Add to Cart\n          </button>\n        ) : null}\n      </div>\n    </Card>\n  );\n}\nexport default Product;\n","import Axios from \"axios\";\n\nconst AxiosInstance = Axios.create({\n  baseURL: \"http://localhost:5000\",\n});\n\nAxiosInstance.interceptors.request.use((config) => {\n  let data = localStorage.getItem(\"persist:@my-app\");\n  if (data) {\n    data = JSON.parse(data);\n    config.headers[\"Authorization\"] = `Bearer ${JSON.parse(data.user)}`;\n  }\n  return config;\n});\n\nconst get = (url) => {\n  return AxiosInstance.get(url);\n};\n\nconst post = (url, data) => {\n  return AxiosInstance.post(url, data);\n};\n\nconst ApiService = { get, post };\nexport default ApiService;\n","import { useState, useEffect } from \"react\";\nimport { getProducts } from \"../services/ProductService\";\n\nfunction useProducts() {\n  let [plist, setPlist] = useState([]);\n  const getData = async () => {\n    try {\n      const res = await getProducts();\n      // plist = res.data;\n      setPlist(res.data);\n    } catch (e) {\n      console.log(\"error\", e);\n    }\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  return plist;\n}\nexport default useProducts;\n","import ApiService from \"./ApiService\";\n\nexport const getProducts = () => {\n  const url = \"/products\";\n  // \"https://raw.githubusercontent.com/mdmoin7/Random-Products-Json-Generator/master/products.json\";\n  return ApiService.get(url);\n};\n","import { useEffect } from \"react\";\nimport Product from \"../components/Product\";\nimport useProducts from \"../hooks/useProducts\";\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { addItem } from \"../store/slices/cartSlice\";\n\nfunction ProductList() {\n  // const [state_variable, update_state_func]= useState(initial_value);\n  const plist = useProducts();\n  const navigate = useNavigate();\n  const [queryParams, setQueryParams] = useSearchParams();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    // ?page=10&pincode=123456\n    console.log(\"PAGE\", queryParams.get(\"page\"));\n  }, [queryParams]);\n\n  return (\n    <div>\n      {plist.map((item) => (\n        <Product\n          key={item.productId}\n          data={item}\n          btnClick={(id) => {\n            dispatch(addItem(item));\n            navigate(\"/cart\");\n          }}\n        />\n      ))}\n\n      <button onClick={() => setQueryParams({ page: 4 })}>Page 4</button>\n    </div>\n  );\n}\nexport default ProductList;\n"],"names":["props","_jsx","className","children","txtColor","useTheme","code","useSelector","store","currency","data","Card","_jsxs","style","color","Link","to","productId","src","productImage","productName","productPrice","productStock","onClick","btnClick","AxiosInstance","Axios","create","baseURL","interceptors","request","use","config","localStorage","getItem","JSON","parse","headers","user","get","url","post","plist","setPlist","useState","getData","async","res","ApiService","e","console","log","useEffect","useProducts","navigate","useNavigate","queryParams","setQueryParams","useSearchParams","dispatch","useDispatch","map","item","Product","id","addItem","page"],"sourceRoot":""}